<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Values.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Foreground"
                Value="{StaticResource ResourceKey=MenuBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Fill="{TemplateBinding Property=Foreground}"
                               Width="{TemplateBinding Property=Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                Padding="12 6">
            <StackPanel>
                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Margin="0,0,0,4" />
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <Path x:Name="GlyphPanel"
                          Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                          Data="{StaticResource ResourceKey=Checkmark}"
                          Visibility="Collapsed"
                          Margin="0,0,4,0"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center" />
                    <ContentPresenter ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center" />
                </StackPanel>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                Padding="12 4">
            <StackPanel>
                <ContentPresenter x:Name="icon"
                                  ContentSource="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Margin="0,0,0,4" />
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <Path x:Name="checkamrk"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                          Data="{StaticResource ResourceKey=Checkmark}"
                          Visibility="Collapsed"
                          Margin="0,0,4,0"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center" />
                    <ContentPresenter ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center" />
                </StackPanel>

                <Popup x:Name="PART_Popup"
                       Placement="Bottom"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="None"
                       AllowsTransparency="True"
                       VerticalOffset="4"
                       HorizontalOffset="-9">
                    <Border Background="{StaticResource ResourceKey=MenuItemBackgroundBrush}"
                            BorderBrush="{StaticResource ResourceKey=MenuBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Style="{StaticResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            Grid.IsSharedSizeScope="true" />
                        </ScrollViewer>
                    </Border>
                </Popup>

            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="checkamrk"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="icon" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="igt" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="arrow" />
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Margin="2"
                                  ContentSource="Icon" />
                <Path x:Name="checkmark"
                      Visibility="Hidden"
                      Margin="2"
                      Height="24"
                      Width="24"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                      Data="{StaticResource ResourceKey=Checkmark}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center" />
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True" />
                <TextBlock Grid.Column="3"
                           Text="{TemplateBinding InputGestureText}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Margin="0 0 4 0" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="checkmark"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="icon" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="igt" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="arrow" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Margin="2"
                                  ContentSource="Icon" />
                <Path x:Name="checkmark"
                      Visibility="Hidden"
                      Margin="2"
                      Height="24"
                      Width="24"
                      Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                      Data="{StaticResource ResourceKey=Checkmark}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center" />
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True" />
                <TextBlock Grid.Column="3"
                           Text="{TemplateBinding InputGestureText}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Margin="0 0 4 0" />

                <Path Grid.Column="4"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                      Data="{StaticResource ResourceKey=RightArrow}"
                      Margin="0 0 4 0" />

                <Popup x:Name="PART_Popup"
                       Placement="Right"
                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="None"
                       AllowsTransparency="True"
                       VerticalOffset="-1">
                    <Border Background="{StaticResource ResourceKey=MenuItemBackgroundBrush}"
                            BorderBrush="{StaticResource ResourceKey=MenuBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            Grid.IsSharedSizeScope="true" />
                        </ScrollViewer>
                    </Border>
                </Popup>

            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="checkmark"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">

        <Setter Property="Background"
                Value="{StaticResource ResourceKey=MenuItemBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ResourceKey=MenuItemBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ResourceKey=MenuItemForegroundBrush}" />


        <Setter Property="Padding"
                Value="4 6" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />

        <Setter Property="Template"
                Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />

        <Style.Triggers>

            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
            </Trigger>

            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
            </Trigger>

            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock"
                        Value="Top" />
                <Setter Property="Template"
                        Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>

            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="DockPanel.Dock"
                        Value="Top" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource ResourceKey=MenuItemPressedBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ResourceKey=MenuItemPressedBorderBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ResourceKey=MenuItemPressedForegroundBrush}" />
            </Trigger>

            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource ResourceKey=MenuItemHoverBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ResourceKey=MenuItemHoverBorderBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ResourceKey=MenuItemHoverForegroundBrush}" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{StaticResource ResourceKey=MenuItemDisabledBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ResourceKey=MenuItemDisabledBorderBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ResourceKey=MenuItemDisabledForegroundBrush}" />
            </Trigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>