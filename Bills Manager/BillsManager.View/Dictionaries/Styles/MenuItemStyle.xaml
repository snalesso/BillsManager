<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Values.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

    <!--<Style x:Key="{x:Type Menu}"
           TargetType="{x:Type Menu}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                     TargetType="{x:Type ContentControl}">
        <theme:ClassicBorderDecorator BorderStyle="AltRaised"
                                      Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                      BorderBrush="{x:Static theme:ClassicBorderDecorator.ClassicBorderBrush}"
                                      BorderThickness="2">
            <ContentPresenter />
        </theme:ClassicBorderDecorator>
    </ControlTemplate>-->

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="MinHeight"
                Value="2" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Margin"
                Value="2,4,2,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding Property=Foreground}"
                            Height="{TemplateBinding Property=Height}"
                            MinHeight="{TemplateBinding Property=MinHeight}"
                            Width="{TemplateBinding Property=Width}"
                            MinWidth="{TemplateBinding Property=MinWidth}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="ClassicBorder"
                Background="{TemplateBinding Property=Background}"
                BorderBrush="{TemplateBinding Property=BorderBrush}"
                Padding="6 2"
                BorderThickness="1">
            <StackPanel>
                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Margin="0,0,0,4" />
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <Path x:Name="GlyphPanel"
                          Fill="{TemplateBinding Foreground}"
                          Data="{StaticResource ResourceKey=Checkmark}"
                          Visibility="Collapsed"
                          Margin="0,0,4,0"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center" />
                    <ContentPresenter ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center" />
                </StackPanel>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="ClassicBorder"
                Background="{TemplateBinding Property=Background}"
                BorderBrush="{TemplateBinding Property=BorderBrush}"
                Padding="6 2"
                BorderThickness="1">
            <StackPanel>
                <ContentPresenter x:Name="icon"
                                  ContentSource="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Margin="0,0,0,4" />
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <Path x:Name="checkamrk"
                          Fill="{TemplateBinding Foreground}"
                          Data="{StaticResource ResourceKey=Checkmark}"
                          Visibility="Collapsed"
                          Margin="0,0,4,0"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center" />
                    <ContentPresenter ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center" />
                </StackPanel>
                <Popup x:Name="PART_Popup"
                       Placement="Bottom"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       Height="Auto"
                       AllowsTransparency="True"
                       VerticalOffset="3"
                       HorizontalOffset="-7">
                    <Border x:Name="SubMenuBorder"
                            Background="{StaticResource ResourceKey=MenuBackgroundBrush}"
                            BorderBrush="{StaticResource ResourceKey=MenuBorderBrush}"
                            BorderThickness="{TemplateBinding Property=BorderThickness}">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Margin="-1"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      Foreground="{TemplateBinding Foreground}">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            Grid.IsSharedSizeScope="true" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="checkamrk"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Name="Bd"
                Background="{TemplateBinding Property=Background}"
                BorderThickness="{TemplateBinding Property=BorderThickness}"
                BorderBrush="{TemplateBinding Property=BorderBrush}"
                Padding="{TemplateBinding Property=Padding}"
                Margin="{TemplateBinding Property=Margin}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="igt" />
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="icon"
                                  VerticalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  HorizontalAlignment="Center"
                                  Margin="0 0 4 0"
                                  ContentSource="{TemplateBinding Property=Icon}" />
                <Path x:Name="checkmark"
                      Visibility="Hidden"
                      Height="32"
                      Width="32"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Grid.Column="1"
                      Margin="0 0 4 0"
                      Fill="{TemplateBinding Property=Foreground}"
                      Data="{StaticResource ResourceKey=Checkmark}" />
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="3"
                           Text="{TemplateBinding InputGestureText}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="checkmark"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border Name="Bd"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="17"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="14" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  ContentSource="Icon" />
                <Path x:Name="checkmark"
                      Margin="4,0,6,0"
                      Visibility="Hidden"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}" />
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True" />
                <Path x:Name="ArrowPanel"
                      Grid.Column="3"
                      DockPanel.Dock="Right"
                      VerticalAlignment="Center"
                      Margin="4,0,6,0"
                      Fill="{TemplateBinding Foreground}"
                      Data="{StaticResource RightArrow}" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Placement="Right"
                       VerticalOffset="-2"
                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                       Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border Name="SubMenuBorder"
                            Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                            BorderThickness="2">
                        <ScrollViewer Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Margin="-1"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0"
                                        Width="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                               Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                               Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="checkmark"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="4" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock"
                        Value="Top" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="DockPanel.Dock"
                        Value="Top" />
            </Trigger>

            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Background"
                        Value="{StaticResource ResourceKey=MenuHoverBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ResourceKey=MenuHoverBorderBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ResourceKey=MenuHoverForegroundBrush}" />
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>